<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:kafka="http://www.mulesoft.org/schema/mule/kafka"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/kafka http://www.mulesoft.org/schema/mule/kafka/current/mule-kafka.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

	<configuration-properties
		doc:name="Configuration properties"
		doc:id="5491e8ae-ed2b-439e-8c6b-73991f207a13" file="application.yaml" />

	<kafka:consumer-config
		name="Apache_Kafka_Consumer_main"
		doc:name="Apache Kafka Consumer configuration"
		doc:id="2f6b6f6f-13b1-43bf-b320-0cb3633f99d1">
		<kafka:consumer-plaintext-connection
			groupId="${kafka.consumer.main.group-id}"
			isolationLevel="${kafka.consumer.main.isolation-level}">
			<kafka:bootstrap-servers>
				<kafka:bootstrap-server
					value="${kafka.bootstrap-servers}" />
			</kafka:bootstrap-servers>
			<kafka:topic-patterns>
				<kafka:topic-pattern
					value="${kafka.consumer.main.topic}" />
			</kafka:topic-patterns>
		</kafka:consumer-plaintext-connection>
	</kafka:consumer-config>

	<kafka:consumer-config
		name="Apache_Kafka_Consumer_retry"
		doc:name="Apache Kafka Consumer configuration"
		doc:id="2cf5b766-3dcc-42ed-9203-78b5d795ec46">
		<kafka:consumer-plaintext-connection
			groupId="${kafka.consumer.retry.group-id}"
			isolationLevel="${kafka.consumer.retry.isolation-level}"
			recordLimit="${kafka.consumer.retry.recordLimit}">
			<kafka:bootstrap-servers>
				<kafka:bootstrap-server
					value="${kafka.bootstrap-servers}" />
			</kafka:bootstrap-servers>
			<kafka:topic-patterns>
				<kafka:topic-pattern
					value="${kafka.consumer.retry.topic}" />
			</kafka:topic-patterns>
		</kafka:consumer-plaintext-connection>
	</kafka:consumer-config>

	<kafka:producer-config
		name="Apache_Kafka_Producer"
		doc:name="Apache Kafka Producer configuration"
		doc:id="527073d8-0f7c-4b9b-8981-5a2a2207a7f5">
		<kafka:producer-plaintext-connection>
			<kafka:bootstrap-servers>
				<kafka:bootstrap-server
					value="${kafka.bootstrap-servers}" />
			</kafka:bootstrap-servers>
		</kafka:producer-plaintext-connection>
	</kafka:producer-config>

	<http:request-config name="HTTP_Request"
		doc:name="HTTP Request configuration"
		doc:id="96e8164c-a5ca-4a2e-a1a2-639697b85ce5">
		<http:request-connection
			protocol="${http.protocol}" host="${http.host}" port="${http.port}" />
	</http:request-config>

	<flow name="main-flow"
		doc:id="38f4f494-f510-44b5-9ddd-c2b58696808d">
		<kafka:message-listener
			doc:name="Message listener"
			doc:id="d9259540-0c52-4c2d-b655-c939f68ecdd2"
			config-ref="Apache_Kafka_Consumer_main" ackMode="${kafka.ack-mode}">
			<reconnect count="${kafka.reconnect-attempts}" />
		</kafka:message-listener>
		<try doc:name="Try" doc:id="d67a8443-68a3-49fc-b1d3-f448f2784d56">
			<flow-ref doc:name="Invoke processing-logic"
				doc:id="2e0bdcdc-921f-4c7e-b14b-0ff89fa9c9a6"
				name="processing-logic" />

			<error-handler>
				<on-error-continue enableNotifications="true"
					logException="true" doc:name="Handle processing errors"
					doc:id="119989cd-ac9e-42a8-a3eb-fa21178f2714">
					<logger level="ERROR" doc:name="Main processing failed"
						message="Failed to process message from main-topic. Error: #[error.description]" />
					<!-- Send to retry logic -->
					<flow-ref doc:name="Handle retry logic"
						doc:id="ea5f38ea-32a6-4cae-a76b-2f6292acb2f1"
						name="retry-logic-flow" />
				</on-error-continue>
			</error-handler>
		</try>
	</flow>

	<sub-flow name="processing-logic"
		doc:id="481b92ef-4791-46a9-938f-ca2cd750a86a">

		<ee:transform doc:name="Parse payload"
			doc:id="b4a0605e-1848-4d47-bf28-ab196496ed34">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
read(payload, (attributes.headers.'Content-Type' default "application/json"))]]></ee:set-payload>
			</ee:message>
		</ee:transform>

		<choice doc:name="Choice"
			doc:id="2d993ed2-edac-48c4-a86b-cbe527ba7c5f">
			<when
				expression='#[payload.address.country == p("processing.error-country")]'>
				<logger level="INFO" doc:name="FAILED CASE"
					doc:id="7d38488f-d6aa-4be6-bd64-83032f83fb61"
					message="Error message: #[payload]" />
				<http:request method="GET" doc:name="Getting HTTP Error"
					doc:id="b1b86b4e-dba1-45e2-a51f-6fedcfc32072"
					config-ref="HTTP_Request" path="/" />
			</when>
			<!-- Add more test cases for different error types -->
			<otherwise>
				<logger level="INFO" doc:name="SUCCESSFUL CASE"
					doc:id="05b01570-3eb1-43a1-99f3-a8f15973df31"
					message="Processing message: #[payload]" />
			</otherwise>
		</choice>
	</sub-flow>

	<sub-flow name="retry-logic-flow"
		doc:id="c03802b2-2b07-482c-84f2-c255d4bbcf5a">

		<!-- First classify the error -->
		<flow-ref doc:name="Classify Error"
			doc:id="8c144d54-6b5c-4bff-9270-bb7b0ce1184a"
			name="classify-error-flow" />

		<ee:transform
			doc:name="Get current retry count &amp; increment it"
			doc:id="c17bd3b3-44be-44a2-8dbd-f1f117a9e9e2">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="currentRetryCount"><![CDATA[%dw 2.0
output application/java
---
(attributes.headers.'X-Retry-Count' as String) as Number default 0]]></ee:set-variable>
				<ee:set-variable variableName="newRetryCount"><![CDATA[%dw 2.0
output application/java
---
(((attributes.headers.'X-Retry-Count' as String) as Number default 0) + 1)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>

		<logger level="INFO" doc:name="Retry info"
			doc:id="7f6d60e5-4670-44eb-95bd-c6e66cb83788"
			message="Processing retry #[vars.newRetryCount] for message. Error Type: #[vars.fullErrorType], IsNonRetryable: #[vars.isNonRetryable]" />

		<!-- Check if error is non-retryable -->
		<choice doc:name="Check Error Type"
			doc:id="03ffde36-7d74-434f-90ac-485f55d2bd00">
			<when expression="#[vars.isNonRetryable == true]">
				<!-- Send directly to DLQ for non-retryable errors -->
				<logger level="WARN"
					doc:name="Non-retryable error - sending to DLQ"
					doc:id="5823caf1-f479-4f5d-996e-51992df49838"
					message="Non-retryable error detected (#[vars.fullErrorType]). Sending message directly to DLQ topic" />

				<kafka:publish
					doc:name="Publish to DLQ (Non-retryable)"
					doc:id="9acd781e-478a-412d-9577-fb3eb008eb49"
					config-ref="Apache_Kafka_Producer"
					topic="${kafka.producer.dlq-topic}" key="#[attributes.key]">
					<kafka:headers><![CDATA[#[%dw 2.0
import toString from dw::util::Coercions
---
{
    "X-Retry-Count": toString(vars.newRetryCount),
    "X-Original-Error": error.description,
    "X-Error-Type": error.errorType.identifier,
    "X-Error-Namespace": error.errorType.namespace,
    "X-Full-Error-Type": vars.fullErrorType,
    "X-Failure-Reason": "NON_RETRYABLE_ERROR",
    "X-Timestamp": now() as String
}]]]></kafka:headers>
				</kafka:publish>
			</when>
			<otherwise>
				<!-- Original retry logic for retryable errors -->
				<choice doc:name="Check retry limit"
					doc:id="733e6a16-6e7a-407b-aedf-31530401bfbf">
					<when
						expression="#[vars.newRetryCount &lt;= p('retry.max-attempts')]">
						<!-- Send to retry topic -->
						<logger level="INFO" doc:name="Sending to retry topic"
							doc:id="0115c908-b412-43b4-99f6-4d338125ba60"
							message="Sending message to retry-topic (attempt #[vars.newRetryCount]) for retryable error: #[vars.fullErrorType]" />

						<kafka:publish doc:name="Publish to retry-topic"
							doc:id="58851448-593f-49ba-91b5-14d744fd4af4"
							config-ref="Apache_Kafka_Producer"
							topic="${kafka.producer.retry-topic}" key="#[attributes.key]">
							<kafka:headers><![CDATA[#[%dw 2.0
import toString from dw::util::Coercions
---
{
    "X-Retry-Count": toString(vars.newRetryCount),
    "X-Original-Error": error.description,
    "X-Error-Type": error.errorType.identifier,
    "X-Error-Namespace": error.errorType.namespace,
    "X-Full-Error-Type": vars.fullErrorType,
    "X-Failure-Reason": "RETRYABLE_ERROR",
    "X-Timestamp": now() as String
}]]]></kafka:headers>
						</kafka:publish>
					</when>
					<otherwise>
						<!-- Send to DLQ topic after max retries -->
						<logger level="WARN" doc:name="Sending to DLQ"
							doc:id="4695c109-216f-4595-a9d5-ad65f7506d1d"
							message="Max retries exceeded for retryable error (#[vars.fullErrorType]). Sending message to DLQ topic" />

						<kafka:publish doc:name="Publish to DLQ"
							doc:id="c2b8cfad-9289-44cc-b4e1-c10caf89b5f6"
							config-ref="Apache_Kafka_Producer"
							topic="${kafka.producer.dlq-topic}" key="#[attributes.key]">
							<kafka:headers><![CDATA[#[%dw 2.0
import toString from dw::util::Coercions
---
{
    "X-Retry-Count": toString(vars.newRetryCount),
    "X-Original-Error": error.description,
    "X-Error-Type": error.errorType.identifier,
    "X-Error-Namespace": error.errorType.namespace,
    "X-Full-Error-Type": vars.fullErrorType,
    "X-Failure-Reason": "MAX_RETRIES_EXCEEDED",
    "X-Timestamp": now() as String
}]]]></kafka:headers>
						</kafka:publish>
					</otherwise>
				</choice>
			</otherwise>
		</choice>
	</sub-flow>

	<flow name="retry-topic-processing-flow"
		doc:id="bb7808b4-af6c-44aa-a323-7086f67e1c85" initialState="started">
		<scheduler doc:name="Scheduler"
			doc:id="9278242f-c2be-4580-abc1-cd94fc7a6a8a">
			<scheduling-strategy>
				<fixed-frequency
					frequency="${retry.scheduler.frequency}" timeUnit="MINUTES" />
			</scheduling-strategy>
		</scheduler>

		<logger level="INFO" doc:name="Starting processing"
			doc:id="a01947af-8a8f-486f-b12a-813654a8d55b"
			message="Scheduler triggered. Starting batch consumption from retry-topic." />

		<!-- Initialize variables to track processing -->
		<ee:transform doc:name="Initialize processing variables"
			doc:id="d5a2ad2c-5b77-4ea0-b950-9212649428a2">
			<ee:message>
				<!-- Keep the message unchanged -->
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
1 to p('processing.batch-size')]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="processedCount"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="failedCount"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="dlqCount"><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="topicEmpty"><![CDATA[%dw 2.0
output application/java
---
false]]></ee:set-variable>
				<ee:set-variable variableName="executionTimestamp"><![CDATA[%dw 2.0
output application/java
---
now()]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each Consume Attempt"
			doc:id="948800e2-446a-4621-a687-7557b50e22bf">
			<!-- Only proceed if the topic is not empty -->
			<choice doc:name="Check if topic is empty"
				doc:id="287e1365-019d-42c9-b82f-f5a0e6e8f83a">
				<when expression="#[vars.topicEmpty == false]">
					<try doc:name="Try to consume message"
						doc:id="e2d8f4f5-680d-46b8-8ffa-fe6f6f716b57">
						<kafka:consume doc:name="Consume from retry-topic"
							doc:id="e60b63fc-ac11-476a-86eb-9785aad32be2"
							config-ref="Apache_Kafka_Consumer_retry"
							ackMode="${kafka.ack-mode}"
							pollTimeout="${kafka.consumer.retry.poll-timeout}"
							pollTimeoutTimeUnit="SECONDS">
							<reconnect count="${kafka.reconnect-attempts}" />
						</kafka:consume>

						<!-- Wrap processing in try-catch to handle business logic errors -->
						<choice doc:name="Skipping a new messages"
							doc:id="bf64cb1d-a425-4eee-9746-257a4e6b7aa5">
							<when
								expression="#[attributes.creationTimestamp &gt;= vars.executionTimestamp]">
								<raise-error
									doc:name="Skip a new produced retry messages"
									doc:id="1e36529b-63f3-4483-bf9f-75e2785351bf"
									type="ERROR-HANDING:MESSAGE-SHOULD-BE-SKIPPED"
									description="The message and the next one should be skipped" />
							</when>
						</choice>
						<try doc:name="Try processing message"
							doc:id="9cd77495-f775-4831-86f0-1e557c2a83e7">
							<flow-ref doc:name="Invoke processing-logic"
								doc:id="148086bd-bc44-40fd-adf1-47075dc6717c"
								name="processing-logic" />

							<!-- Increment processed count only on success -->
							<set-variable value="#[vars.processedCount + 1]"
								doc:name="Increment processed count"
								doc:id="d05ddd42-ecd7-46db-a13e-104fa4b2d3c1"
								variableName="processedCount" />

							<logger level="INFO" doc:name="Processing succeeded"
								message="Successfully processed retry message with retry count: #[attributes.headers.'X-Retry-Count' default '0']" />

							<error-handler>
								<on-error-continue enableNotifications="true"
									logException="true" doc:name="Handle processing errors"
									doc:id="8b6fb6ca-4214-4207-8515-0ae3caa3ee1b">
									<logger level="ERROR" doc:name="Processing failed"
										message="Failed to process retry message. Error: #[error.description]" />

									<!-- Handle retry logic -->
									<flow-ref doc:name="Handle retry logic"
										doc:id="46ce0270-d98b-4cd1-abe4-a2bc0656de8e"
										name="retry-logic-flow" />

									<!-- Check what happened and increment appropriate counter -->
									<set-variable
										value="#[attributes.headers.'X-Retry-Count' default '0']"
										doc:name="Get retry count for tracking"
										variableName="retryCountForTracking" />

									<choice doc:name="Track retry vs DLQ"
										doc:id="59433a33-3274-4c48-98f2-ff8722f2db78">
										<when
											expression="#[(vars.retryCountForTracking as Number) + 1 > p('retry.max-attempts')]">
											<set-variable value="#[vars.dlqCount + 1]"
												doc:name="Increment DLQ count" variableName="dlqCount" />
										</when>
										<otherwise>
											<set-variable value="#[vars.failedCount + 1]"
												doc:name="Increment failed count" variableName="failedCount" />
										</otherwise>
									</choice>
								</on-error-continue>
							</error-handler>
						</try>

						<error-handler>
							<on-error-continue enableNotifications="true"
								logException="false" doc:name="Handle KAFKA:NOT_FOUND"
								doc:id="63c12c78-1f61-41ec-b160-85d6a3ce0555"
								type="KAFKA:NOT_FOUND">
								<!-- This error means no more messages are available -->
								<logger level="INFO" doc:name="No more messages"
									doc:id="6dd648f7-090d-425a-a7df-55c8da80e972"
									message="No more messages available in retry-topic. Processed #[vars.processedCount] messages in this run." />
								<set-variable value="true"
									doc:name="Set topic empty"
									doc:id="bc2d537e-0217-4ad5-8c7b-f8b0c2758467"
									variableName="topicEmpty" />
							</on-error-continue>
							<on-error-propagate enableNotifications="true"
								logException="false"
								doc:name="Handle ERROR-HANDING:MESSAGE-SHOULD-BE-SKIPPED"
								doc:id="814469de-e4ce-4bb2-99f1-607a1fb6c1c2"
								type="ERROR-HANDING:MESSAGE-SHOULD-BE-SKIPPED">
								<!-- This error means no more messages are available -->
								<logger level="INFO" doc:name="No more messages"
									doc:id="735027d5-aa06-4433-89e2-00cba94456cb"
									message="No more messages available in retry-topic. Processed #[vars.processedCount] messages in this run." />
								<set-variable value="true"
									doc:name="Set topic empty"
									doc:id="0c727707-1c5f-426c-819b-03ee3cbfdad7"
									variableName="topicEmpty" />
								<logger level="INFO" doc:name="Final summary"
									doc:id="485f5cb1-6a75-48df-8f1e-6bd175fc32bd"
									message="Batch processing completed. Successfully processed: #[vars.processedCount], Failed (retrying): #[vars.failedCount], Sent to DLQ: #[vars.dlqCount]" />
							</on-error-propagate>

						</error-handler>
					</try>
				</when>
				<otherwise>
					<!-- Topic is empty, skip remaining iterations -->
					<logger level="DEBUG" doc:name="Skipping - topic empty"
						doc:id="27c7d720-36f4-4897-adf0-dc00860d16ac"
						message="Skipping consume attempt - topic is empty" />
				</otherwise>
			</choice>
		</foreach>

		<logger level="INFO" doc:name="Final summary"
			doc:id="2c0836ca-0d10-4aae-8854-a20c27b302b0"
			message="Batch processing completed. Successfully processed: #[vars.processedCount], Failed (retrying): #[vars.failedCount], Sent to DLQ: #[vars.dlqCount]" />
	</flow>

	<!-- Error Classification Sub-flow -->
	<sub-flow name="classify-error-flow"
		doc:id="154c0717-7922-4653-b05f-8445873d2e89">
		<ee:transform doc:name="Classify Error Type"
			doc:id="196b0177-cbf7-48cc-8af7-28adae689800">
			<ee:message>
				<!-- Keep the message unchanged -->
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="errorType"><![CDATA[%dw 2.0
output application/java
---
error.errorType.identifier default "UNKNOWN"]]></ee:set-variable>
				<ee:set-variable variableName="errorNamespace"><![CDATA[%dw 2.0
output application/java
---
error.errorType.namespace default "MULE"]]></ee:set-variable>
				<ee:set-variable variableName="fullErrorType"><![CDATA[%dw 2.0
output application/java
---
(error.errorType.namespace default "MULE") ++ ":" ++ (error.errorType.identifier default "UNKNOWN")]]></ee:set-variable>
				<ee:set-variable variableName="retryableErrors"><![CDATA[%dw 2.0
output application/java
---
(p('retry.retryable-errors') default "" splitBy ",") map trim($) filter ($ != "")]]></ee:set-variable>
				<ee:set-variable variableName="nonRetryableErrors"><![CDATA[%dw 2.0
output application/java
---
(p('retry.non-retryable-errors') default "" splitBy ",") map trim($) filter ($ != "")]]></ee:set-variable>
			</ee:variables>
		</ee:transform>

		<!-- Second transform to evaluate boolean conditions -->
		<ee:transform doc:name="Evaluate Error Classification"
			doc:id="82c7aa2d-7a11-4b4e-a3d5-918fb385dccc">
			<ee:message>
				<!-- Keep the message unchanged -->
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="isNonRetryable"><![CDATA[%dw 2.0
output application/java
---
(vars.nonRetryableErrors contains vars.fullErrorType) or (vars.nonRetryableErrors contains vars.errorType)]]></ee:set-variable>
				<ee:set-variable variableName="isRetryable"><![CDATA[%dw 2.0
output application/java
---
(vars.retryableErrors contains vars.fullErrorType) or (vars.retryableErrors contains vars.errorType)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>

		<logger level="DEBUG" doc:name="Error Classification Debug"
			doc:id="ecfb6f89-5ed8-4b42-9eaa-78b5663401d1"
			message="Error classification - Type: #[vars.fullErrorType], IsNonRetryable: #[vars.isNonRetryable], IsRetryable: #[vars.isRetryable], RetryableErrors: #[vars.retryableErrors], NonRetryableErrors: #[vars.nonRetryableErrors]" />
	</sub-flow>
</mule>